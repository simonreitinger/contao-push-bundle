"serviceWorker"in navigator&&document.addEventListener("DOMContentLoaded",()=>{function e(e){switch(e){case"enabled":a=!0,c.disabled=!1,c.textContent=c.dataset.disable;break;case"disabled":a=!1,c.disabled=!1,c.textContent=c.dataset.enable;break;case"computing":c.disabled=!0;break;case"incompatible":c.disabled=!0,console.error("Push notifications are not compatible with this browser");break;default:console.error("Unhandled push button state",e)}}function n(e){const n="=".repeat((4-e.length%4)%4),t=(e+n).replace(/\-/g,"+").replace(/_/g,"/"),i=window.atob(t),r=new Uint8Array(i.length);for(let e=0;e<i.length;++e)r[e]=i.charCodeAt(e);return r}function t(){return new Promise((e,n)=>"denied"===Notification.permission?n(new Error("Push messages are blocked.")):"granted"===Notification.permission?e():"default"===Notification.permission?Notification.requestPermission().then(t=>{"granted"!==t&&n(new Error("Bad permission result")),e()}):void 0)}function i(){return e("computing"),t().then(()=>navigator.serviceWorker.ready).then(e=>e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:n(applicationServerKey)})).then(e=>s(e,"POST")).then(n=>n&&e("enabled")).catch(n=>{"denied"===Notification.permission?(console.warn("Notifications are denied by the user."),e("incompatible")):(console.error("Impossible to subscribe to push notifications",n),e("disabled"))})}function r(){navigator.serviceWorker.ready.then(e=>e.pushManager.getSubscription()).then(n=>{if(e("disabled"),n)return s(n,"PUT")}).then(n=>n&&e("enabled")).catch(e=>{console.error("Error when updating the subscription",e)})}function o(){e("computing"),navigator.serviceWorker.ready.then(e=>e.pushManager.getSubscription()).then(n=>{if(n)return s(n,"DELETE");e("disabled")}).then(e=>e.unsubscribe()).then(()=>e("disabled")).catch(n=>{console.error("Error when unsubscribing the user",n),e("disabled")})}function s(e,n){const t=e.getKey("p256dh"),i=e.getKey("auth"),r=(PushManager.supportedContentEncodings||["aesgcm"])[0];return fetch("_push/subscription",{method:n,body:JSON.stringify({endpoint:e.endpoint,publicKey:t?btoa(String.fromCharCode.apply(null,new Uint8Array(t))):null,authToken:i?btoa(String.fromCharCode.apply(null,new Uint8Array(i))):null,contentEncoding:r})}).then(()=>e)}let a=!1;const c=document.getElementById("push-subscription-button");if(c)return c.addEventListener("click",function(){a?o():i()}),"serviceWorker"in navigator?"PushManager"in window?"showNotification"in ServiceWorkerRegistration.prototype?"denied"===Notification.permission?(console.warn("Notifications are denied by the user"),void e("incompatible")):void navigator.serviceWorker.register("/contao-push-sw.js",{scope:"/"}).then(()=>{console.log("[SW] Service worker has been registered"),r()},n=>{console.error("[SW] Service worker registration failed",n),e("incompatible")}):(console.warn("Notifications are not supported by this browser"),void e("incompatible")):(console.warn("Push notifications are not supported by this browser"),void e("incompatible")):(console.warn("Service workers are not supported by this browser"),void e("incompatible"))});