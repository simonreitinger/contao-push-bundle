"serviceWorker"in navigator&&document.addEventListener("load",()=>{function e(e){switch(e){case"enabled":c=!0,d.disabled=c,l.disabled=!c;break;case"disabled":c=!1,d.disabled=c,l.disabled=!c;break;case"computing":d.disabled=!0,l.disabled=!0;break;case"incompatible":d.disabled=!0,l.disabled=!0,console.error("Push notifications are not compatible with this browser");break;default:console.error("Unhandled push button state",e)}}function n(e){const n="=".repeat((4-e.length%4)%4),i=(e+n).replace(/\-/g,"+").replace(/_/g,"/"),r=window.atob(i),t=new Uint8Array(r.length);for(let e=0;e<r.length;++e)t[e]=r.charCodeAt(e);return t}function i(){return new Promise((e,n)=>"denied"===Notification.permission?n(new Error("Push messages are blocked.")):"granted"===Notification.permission?e():"default"===Notification.permission?Notification.requestPermission().then(i=>{"granted"!==i&&n(new Error("Bad permission result")),e()}):void 0)}function r(){return e("computing"),i().then(()=>navigator.serviceWorker.ready).then(e=>e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:n(a)})).then(e=>s(e,"POST")).then(n=>n&&e("enabled")).catch(n=>{"denied"===Notification.permission?(console.warn("Notifications are denied by the user."),e("incompatible")):(console.error("Impossible to subscribe to push notifications",n),e("disabled"))})}function t(){navigator.serviceWorker.ready.then(e=>e.pushManager.getSubscription()).then(n=>{if(e("disabled"),n)return s(n,"PUT")}).then(n=>n&&e("enabled")).catch(e=>{console.error("Error when updating the subscription",e)})}function o(){e("computing"),navigator.serviceWorker.ready.then(e=>e.pushManager.getSubscription()).then(n=>{if(n)return s(n,"DELETE");e("disabled")}).then(e=>e.unsubscribe()).then(()=>e("disabled")).catch(n=>{console.error("Error when unsubscribing the user",n),e("disabled")})}function s(e,n){const i=e.getKey("p256dh"),r=e.getKey("auth"),t=(PushManager.supportedContentEncodings||["aesgcm"])[0];return fetch("_push/subscription",{method:n,body:JSON.stringify({endpoint:e.endpoint,publicKey:i?btoa(String.fromCharCode.apply(null,new Uint8Array(i))):null,authToken:r?btoa(String.fromCharCode.apply(null,new Uint8Array(r))):null,contentEncoding:t})}).then(()=>e)}const a="BGjSJnKEUcSelamQvafBLkl64jzJHGG4YWcD9OnNR34aAdluOr0fo4hWbXzAISL92k6KEsm2hVyGXCJICYamXvw";let c=!1;const d=document.getElementById("enable-push-subscription-button"),l=document.getElementById("disable-push-subscription-button");if(d&&l)return d.addEventListener("click",r),l.addEventListener("click",o),"serviceWorker"in navigator?"PushManager"in window?"showNotification"in ServiceWorkerRegistration.prototype?"denied"===Notification.permission?(console.warn("Notifications are denied by the user"),void e("incompatible")):void navigator.serviceWorker.register("/bundles/contaopush/sw.js").then(()=>{console.log("[SW] Service worker has been registered"),t()},n=>{console.error("[SW] Service worker registration failed",n),e("incompatible")}):(console.warn("Notifications are not supported by this browser"),void e("incompatible")):(console.warn("Push notifications are not supported by this browser"),void e("incompatible")):(console.warn("Service workers are not supported by this browser"),void e("incompatible"))});